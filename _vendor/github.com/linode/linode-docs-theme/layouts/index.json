{{- $index := slice -}}
{{- $pages := where .Site.Pages "Type" "not in"  (slice "page" "json" "api" ) -}}
{{- range $i, $e := $pages -}}
{{- $shouldAdd := true }}
{{- $img := partial "funcs/get-bundle-image.html" . -}}
{{- $thumb := $img -}}
{{- if ne $thumb.MediaType.SubType "svg" -}}
{{- $thumb = $img.Resize "640x jpg" -}}
{{- end -}}
{{- $excludeFromViews := .Params.excludeFromViews | default slice -}}
{{- $category := .Params.category -}}
{{ $tags := .Params.tags -}}
{{- $sections := slice -}}
{{- $section := "" }}
{{- if or (eq .Kind "taxonomy") (eq .Kind "term" ) }}
{{- $sections = slice "taxonomies" -}}
{{- $sections = $sections | append .SectionsEntries -}}
{{- $section = replace (path.Join $sections) "/" " > " }}
{{- end -}}
{{- $owningSection := .CurrentSection -}}
{{- if .IsSection -}}
{{/*- Skip orphan/empty sections; that does not work with the left menu. -*/}}
{{ $shouldAdd = .RegularPagesRecursive }}
{{- with .Parent.CurrentSection -}}
{{- $owningSection = . }}
{{- end -}}
{{- end -}}
{{- if not $section -}}
{{- $entries := $owningSection.SectionsEntries -}}
{{- $first := index $entries 0 -}}
{{- $rest := $entries | after 1 -}}
{{- if .IsSection -}}
{{- $first = printf "%s-branches" $first -}}
{{- end -}}
{{- $entries = slice $first | append $rest -}}
{{- $section = delimit $entries " > " }}
{{- end -}}
{{- $excerpt := "" -}}
{{- if .Params.description -}}
{{- $excerpt = .Params.description -}}
{{- else -}}
{{- $excerpt = .Summary -}}
{{- end -}}
{{- $ordinal := 0 }}
{{- with .Params.tab_group_main -}}
{{/* This is set in products pages. */}}
{{- $ordinal = .weight }}
{{- end -}}
{{- $deprecated := cond (ne .Params.deprecated nil) .Params.deprecated false -}}
{{- $title := partial "funcs/get-page-title.html" . }}
{{- $path := "" -}}
{{- with .File -}}
    {{ $path = .Path -}}
{{- else -}}
    {{ $path = .Path }}
{{- end -}}
{{- $objectID := printf "%s-%s" .Lang $path | md5 -}}
{{- $dict := (dict "objectID" $objectID "ordinal" $ordinal "thumbnailUrl" $thumb.RelPermalink "section" $section "category" $category "tags" $tags "excerpt" $excerpt "title" $title "linkTitle"  .LinkTitle "href" .RelPermalink "lastUpdatedTime" .Lastmod.Unix "firstPublishedTime" .PublishDate.Unix "firstPublishedYear" .PublishDate.Year "keywords" .Params.keywords "deprecated" $deprecated "hiddenguide" .Params.hiddenguide "h1" .Params.h1_title "toc" (.TableOfContents | plainify ) "excludeFromViews" $excludeFromViews ) }}
{{- $dict = $dict | merge (dict "skillLevel" .Params.skillLevel "languages" .Params.languages) -}}
{{- $sectionPath := "" -}}
{{- if not $sections -}}
{{- $sections = $sections | append $owningSection.SectionsEntries  -}}
{{- end -}}
{{- $isSection := .IsSection -}}
{{- range $i, $section := $sections -}}
{{- if not $sectionPath -}}
{{- $sectionPath = $section -}}
{{- else -}}
{{- $sectionPath = (printf "%s > %s" $sectionPath $section) -}}
{{- end -}}
{{- if and $isSection (eq $i 0) -}}
{{- $sectionPath = printf "%s-branches" $sectionPath -}}
{{- end -}}
{{-  $dict = $dict | merge (dict (printf "section.lvl%d" $i) $sectionPath) -}}
{{- end -}}
{{- if $shouldAdd -}}
{{- $index = $index | append $dict -}}
{{- end -}}
{{- end -}}
{{- $index | jsonify (dict "indent" "  ")  -}}